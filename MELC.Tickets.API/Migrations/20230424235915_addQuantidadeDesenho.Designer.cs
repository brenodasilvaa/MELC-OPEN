// <auto-generated />
using System;
using MELC.Main.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MELC.Main.API.Migrations
{
    [DbContext(typeof(MelcContext))]
    [Migration("20230424235915_addQuantidadeDesenho")]
    partial class addQuantidadeDesenho
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MELC.Main.API.Models.ArquivoDesenho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(600)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DesenhoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("DesenhoId");

                    b.ToTable("ArquivosDesenho", (string)null);
                });

            modelBuilder.Entity("MELC.Main.API.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(18)
                        .IsUnicode(true)
                        .HasColumnType("varchar(18)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("MELC.Main.API.Models.Desenho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Conjunto")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("NumeroConjunto")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDesenho")
                        .HasColumnType("int");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Desenhos", (string)null);
                });

            modelBuilder.Entity("MELC.Main.API.Models.DesenhoServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CriadoPorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DesenhoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Horas")
                        .HasColumnType("int");

                    b.Property<int?>("Minutos")
                        .HasColumnType("int");

                    b.Property<int>("Servico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("DesenhoId");

                    b.ToTable("DesenhoServicos", (string)null);
                });

            modelBuilder.Entity("MELC.Main.API.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("NumeroPedido")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CriadoPorId");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("MELC.Main.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MELC.Main.API.Models.ArquivoDesenho", b =>
                {
                    b.HasOne("MELC.Main.API.Models.Desenho", "Desenho")
                        .WithMany("Arquivos")
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desenho");
                });

            modelBuilder.Entity("MELC.Main.API.Models.Desenho", b =>
                {
                    b.HasOne("MELC.Main.API.Models.User", "CriadoPor")
                        .WithMany("Desenhos")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MELC.Main.API.Models.Pedido", "Pedido")
                        .WithMany("Desenhos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriadoPor");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("MELC.Main.API.Models.DesenhoServico", b =>
                {
                    b.HasOne("MELC.Main.API.Models.User", "CriadoPor")
                        .WithMany("DesenhoServicos")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MELC.Main.API.Models.Desenho", "Desenho")
                        .WithMany("DesenhoServicos")
                        .HasForeignKey("DesenhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriadoPor");

                    b.Navigation("Desenho");
                });

            modelBuilder.Entity("MELC.Main.API.Models.Pedido", b =>
                {
                    b.HasOne("MELC.Main.API.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MELC.Main.API.Models.User", "CriadoPor")
                        .WithMany("Pedidos")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("CriadoPor");
                });

            modelBuilder.Entity("MELC.Main.API.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("MELC.Main.API.Models.Desenho", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("DesenhoServicos");
                });

            modelBuilder.Entity("MELC.Main.API.Models.Pedido", b =>
                {
                    b.Navigation("Desenhos");
                });

            modelBuilder.Entity("MELC.Main.API.Models.User", b =>
                {
                    b.Navigation("DesenhoServicos");

                    b.Navigation("Desenhos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
